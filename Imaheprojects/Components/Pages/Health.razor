@page "/health"
@inject HttpClient Http

<div class="health-container">
    <h3>API Health Check</h3>
    
    <div class="health-actions">
        <button class="btn btn-primary" @onclick="CheckHealth" disabled="@isChecking">
            @if (isChecking)
            {
                <span>Checking...</span>
            }
            else
            {
                <span>Check API Health</span>
            }
        </button>
    </div>

    @if (!string.IsNullOrEmpty(status))
    {
        <div class="alert alert-info">
            <strong>API Status:</strong> @status
        </div>
    }
    
    @if (!string.IsNullOrEmpty(errorMessage))
    {
        <div class="alert alert-danger">
            <strong>Error:</strong> @errorMessage
            <button @onclick="ClearError" class="close-btn">&times;</button>
        </div>
    }
    
    @if (lastChecked.HasValue)
    {
        <div class="health-info">
            <small>Last checked: @lastChecked.Value.ToString("yyyy-MM-dd HH:mm:ss")</small>
        </div>
    }
</div>

@code {
    private string status = "";
    private string errorMessage = "";
    private bool isChecking = false;
    private DateTime? lastChecked = null;

    private async Task CheckHealth()
    {
        isChecking = true;
        status = "";
        errorMessage = "";
        
        try
        {
            var response = await Http.GetAsync("http://localhost:8000/health/");
            
            if (response.IsSuccessStatusCode)
            {
                var json = await response.Content.ReadAsStringAsync();
                status = $"Healthy - {json}";
                lastChecked = DateTime.Now;
            }
            else
            {
                errorMessage = $"API Error: {response.StatusCode} - {response.ReasonPhrase}";
                lastChecked = DateTime.Now;
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"Connection Error: {ex.Message}";
            lastChecked = DateTime.Now;
        }
        finally
        {
            isChecking = false;
        }
    }

    private void ClearError()
    {
        errorMessage = "";
    }
} 